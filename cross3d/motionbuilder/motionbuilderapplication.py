###	\namespace	blur3d.api.abstract.motionbuilderapplication##	\remarks	The StudiomaxApplication class will define all operations for application interaction. It is a singleton class, so calling blur3d.api.Application() will#				always return the same instance of Application. One of its main functions is connecting application callbacks to blur3d.api.Dispatch.#				#				The StudiomaxApplication is a QObject instance and any changes to the scene data can be controlled by connecting to the signals defined here.##				When subclassing the AbstractScene, methods tagged as @abstractmethod will be required to be overwritten.  Methods tagged with [virtual]#				are flagged such that additional operations could be required based on the needs of the method.  All @abstractmethod methods MUST be implemented#				in a subclass.#	#	\author		Mikeh@blur.com#	\author		Blur Studio#	\date		06/07/11##------------------------------------------------------------------------------------------------------------------------import pyfbsdk as mobfrom blur3d import apifrom blur3d.api.abstract.abstractapplication import AbstractApplication#------------------------------------------------------------------------------------------------------------------------dispatch = Noneclass MotionBuilderApplication(AbstractApplication):		def version(self):		path = mob.__file__		if '2012' in path:			return 2012		elif '2013' in path:			return 2013		elif '2014' in path:			return 2014# register the symbolapi.registerSymbol( 'Application', MotionBuilderApplication)